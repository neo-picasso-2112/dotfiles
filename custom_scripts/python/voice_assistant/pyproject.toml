[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "voice-assistant-stt"
version = "0.1.0"
description = "Real-time voice transcription assistant using RealtimeSTT and Whisper"
readme = "README_STT.md"
authors = [
    {name = "William Nguyen", email = "your.email@example.com"}
]
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["voice", "assistant", "speech-to-text", "stt", "whisper", "realtime"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core dependencies
    "google-genai>=1.16.0",
    "sounddevice>=0.5.0",
    "numpy<2",  # RealtimeSTT requires numpy 1.x
    "RealtimeSTT>=0.3.0",
    "rich>=14.0.0",
    "PyAudio>=0.2.14",
    
    # RealtimeSTT dependencies (explicit versions for stability)
    "faster-whisper==1.1.1",
    "av>=14.0.0",
    "torch>=2.2.0",
    "torchaudio>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "ruff>=0.3.0",
]

test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
"Homepage" = "https://github.com/neo-picasso-2112/dotfiles"
"Bug Reports" = "https://github.com/neo-picasso-2112/dotfiles/issues"
"Source" = "https://github.com/neo-picasso-2112/dotfiles/tree/main/custom_scripts/python/voice_assistant"

[project.scripts]
voice-assistant = "main:main"

[tool.setuptools]
packages = ["voice_assistant"]
package-dir = {"voice_assistant" = "."}

[tool.setuptools.package-data]
voice_assistant = ["*.md", "tests/*.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | _build
  | build
  | dist
  | migrations
)/
'''

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]